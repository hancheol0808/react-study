■ 변수처리
  ● return문안에서는 변수를 생성하거나 일반스크립트를 작성할 수 있음
  ● return문안에서는 변수나 함수를 사용시에는 {}를 사용

■ 함수와 이벤트 연동
  ● 객체의 속성이벤트를 사용

■state변수, useState
  ● 값이 변하면 화면이 변한다
  ● 함수를 임포트 해야 함
    import React, { useState } from 'react';
  ● 선언
    let [name,setName] = useState("홍길동")//let name = "홍길동"
  ● 변경
    setName(e.target.innerText)//name = e.target.innerText
  ● state가 변경되면 화면을 리렌더링 한다
  ● 렌더링이 다시 이루어진 다음 state값이 변경됨 
  

■ 객체찾기 , useRef()
  ● jsx문법이 실제 html로 렌더링되고 나서야 객체를 찾을 수 있음
     렌더링되후에 실행되는 함수(ex:이벤트함수)에서는 useRef를 사용하지 않아도 무방)
  ● ref선언
    const 이름 = useRef() 
  ● ref연동  
    <input ref = {객체이름} />
  ● ref호출
    refEl.current      